// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using hccapiv2.Data;

#nullable disable

namespace hccapiv2.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240516190954_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("hccapiv2.Data.Models.Calendar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Calendars");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "Parish"
                        });
                });

            modelBuilder.Entity("hccapiv2.Data.Models.CalendarEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CalendarId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EventTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsAllDay")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRecurring")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RecurrenceGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("RecurrenceType")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CalendarId");

                    b.HasIndex("EventTypeId");

                    b.ToTable("CalendarEvents");
                });

            modelBuilder.Entity("hccapiv2.Data.Models.Content", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("CanResize")
                        .HasColumnType("bit");

                    b.Property<int>("ContentType")
                        .HasColumnType("int");

                    b.Property<int>("Index")
                        .HasColumnType("int");

                    b.Property<int?>("PageId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PageId");

                    b.ToTable("Contents");

                    b.HasDiscriminator<int>("ContentType");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("hccapiv2.Data.Models.EventType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EventTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Color = "Blue",
                            Title = "Standard"
                        },
                        new
                        {
                            Id = 2,
                            Color = "Red",
                            Title = "Meeting"
                        },
                        new
                        {
                            Id = 3,
                            Color = "Green",
                            Title = "Mass"
                        },
                        new
                        {
                            Id = 4,
                            Color = "Gray",
                            Title = "Holiday"
                        });
                });

            modelBuilder.Entity("hccapiv2.Data.Models.File", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BlobId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FileContentId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FileContentId");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("hccapiv2.Data.Models.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Index")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("hccapiv2.Data.Models.Page", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Index")
                        .HasColumnType("int");

                    b.Property<int?>("MenuId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.ToTable("Pages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Index = 0,
                            Title = "Home"
                        });
                });

            modelBuilder.Entity("hccapiv2.Data.Models.Tab", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ContentId")
                        .HasColumnType("int");

                    b.Property<int>("Index")
                        .HasColumnType("int");

                    b.Property<int?>("TabContentId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ContentId");

                    b.HasIndex("TabContentId");

                    b.ToTable("Tabs");
                });

            modelBuilder.Entity("hccapiv2.Data.Models.CalendarContent", b =>
                {
                    b.HasBaseType("hccapiv2.Data.Models.Content");

                    b.Property<int>("CalendarId")
                        .HasColumnType("int");

                    b.HasIndex("CalendarId");

                    b.HasDiscriminator().HasValue(2);
                });

            modelBuilder.Entity("hccapiv2.Data.Models.FileContent", b =>
                {
                    b.HasBaseType("hccapiv2.Data.Models.Content");

                    b.HasDiscriminator().HasValue(3);
                });

            modelBuilder.Entity("hccapiv2.Data.Models.TabContent", b =>
                {
                    b.HasBaseType("hccapiv2.Data.Models.Content");

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("hccapiv2.Data.Models.TextContent", b =>
                {
                    b.HasBaseType("hccapiv2.Data.Models.Content");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue(0);
                });

            modelBuilder.Entity("hccapiv2.Data.Models.CalendarEvent", b =>
                {
                    b.HasOne("hccapiv2.Data.Models.Calendar", null)
                        .WithMany("Events")
                        .HasForeignKey("CalendarId");

                    b.HasOne("hccapiv2.Data.Models.EventType", "EventType")
                        .WithMany()
                        .HasForeignKey("EventTypeId");

                    b.Navigation("EventType");
                });

            modelBuilder.Entity("hccapiv2.Data.Models.Content", b =>
                {
                    b.HasOne("hccapiv2.Data.Models.Page", "Page")
                        .WithMany("Contents")
                        .HasForeignKey("PageId");

                    b.Navigation("Page");
                });

            modelBuilder.Entity("hccapiv2.Data.Models.File", b =>
                {
                    b.HasOne("hccapiv2.Data.Models.FileContent", null)
                        .WithMany("Files")
                        .HasForeignKey("FileContentId");
                });

            modelBuilder.Entity("hccapiv2.Data.Models.Page", b =>
                {
                    b.HasOne("hccapiv2.Data.Models.Menu", "Menu")
                        .WithMany("Pages")
                        .HasForeignKey("MenuId");

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("hccapiv2.Data.Models.Tab", b =>
                {
                    b.HasOne("hccapiv2.Data.Models.Content", "Content")
                        .WithMany()
                        .HasForeignKey("ContentId");

                    b.HasOne("hccapiv2.Data.Models.TabContent", null)
                        .WithMany("Tabs")
                        .HasForeignKey("TabContentId");

                    b.Navigation("Content");
                });

            modelBuilder.Entity("hccapiv2.Data.Models.CalendarContent", b =>
                {
                    b.HasOne("hccapiv2.Data.Models.Calendar", "Calendar")
                        .WithMany()
                        .HasForeignKey("CalendarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Calendar");
                });

            modelBuilder.Entity("hccapiv2.Data.Models.Calendar", b =>
                {
                    b.Navigation("Events");
                });

            modelBuilder.Entity("hccapiv2.Data.Models.Menu", b =>
                {
                    b.Navigation("Pages");
                });

            modelBuilder.Entity("hccapiv2.Data.Models.Page", b =>
                {
                    b.Navigation("Contents");
                });

            modelBuilder.Entity("hccapiv2.Data.Models.FileContent", b =>
                {
                    b.Navigation("Files");
                });

            modelBuilder.Entity("hccapiv2.Data.Models.TabContent", b =>
                {
                    b.Navigation("Tabs");
                });
#pragma warning restore 612, 618
        }
    }
}
